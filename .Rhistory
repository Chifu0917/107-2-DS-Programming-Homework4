成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2)[c(2,3)] <- c("姓名","成績")
colnames(StuDF2)
library(stringr)
rownames(StuDF2)
rownames(StuDF2) <- str_c("第",1:5,"筆")
rownames(StuDF2)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在
a[[5]] <- "7" # 元素不存在
a
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b[[3]] <- "FALSE" #可用$(名稱)取
b
b[[5]] <- 7
b
names(b)
b[["新元素A"]] <- c(1,2,3)
b$新元素B <- c(T,F,T)
b
names(b)
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
library(lubridate)
names(exData3)
exData3[[1]] <- ymd(exData3[[1]])
class(exData3[[1]])
time1 <- ymd("1997-06-01")
time1
time2 <- ymd("1998-12-01")
time2
isAsiaCrisis <- exData3[[1]] <= time2 & exData3[[1]] >= time1
class(isAsiaCrisis)
isAsiaCrisis
logiAsiaCrisis <- exData3$isAsiaCrisis
exData3[logiAsiaCrisis, ]
exData3[exData3$isAsiaCrisis==T ,]
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
transcriptDataFinal1 <- transcriptDataFinal[transcriptDataFinal[[1]] == "92aS67fee" , ]
transcriptDataFinal1
utility_cobb_douglass <- function(x,y,.alpha,.beta){
utilValue <- x^.alpha*y^.beta # 程序產生output值
return(utilValue) # 傳回output值
}
class(utility_cobb_douglass)
utility_cobb_douglass(1,2,0.5,0.8)
lovefunction <- function(x,.alpha){lovevalue <- x *.alpha
return(lovevalue)}
lovefunction(13,40)
punsloveindex <- lovefunction(0,100)
punsloveindex
supply_fun <- function(a,b,P){
Qs <- a+b*P
return(Qs)}
demand_fun <- function(c,d,P){
Qd <- c-d*P
return(Qd)
}
supply_fun(3,7,2)
demand_fun(6,1,3)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
studentID <-"92aS67fee"
transcriptDataFinal$學號==studentID -> logiChosenStudent
sum(transcriptDataFinal$學期成績[logiChosenStudent]*
transcriptDataFinal$學分數[logiChosenStudent])/
sum(transcriptDataFinal$學分數[logiChosenStudent]) -> GPA
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
sum(transcriptDataFinal$學期成績[logiChosenStudent]*
transcriptDataFinal$學分數[logiChosenStudent])/
sum(transcriptDataFinal$學分數[logiChosenStudent]) -> GPA
return(GPA)
}
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
df_validCommits <- ymd_hms(df_validCommits)
# df_validCommits$commitDate
df_validCommits <- ymd_hms(df_validCommits)
df_validCommits$commitDate
df_validCommits <- ymd_hms(df_validCommits,tz="Asia/Taipei")
df_validCommits$commitDate
df_validCommits <- ymd_hms(df_validCommits$commitDate)
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate)
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate)
?$
?
? $`$.data.frame`
?$`$.data.frame`
??$
? $
df_validCommits[commitDate] <- ymd_hms(df_validCommits[commitDate])
df_validCommits$commitDate] <- ymd_hms(df_validCommits$commitDate)
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate)
df_validCommits $ commitDate <- ymd_hms(df_validCommits$commitDate)
df_validCommits $ commitDate <- ymd_hms(df_validCommits$commitDate ,tz="Asia/Taipei")
df_validCommits$commitDate <- ymd_hms("df_validCommits$commitDate" ,tz="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate)
df_validCommits$commitDate
df_validCommits$commitDate <- ymd_hms("df_validCommits$commitDate")
df_validCommits$commitDate
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
commitHistory[[10]]-> oneCommitRecord
oneCommitRecord
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F)
df_commit
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
library(purrr)
map_dfr(commitHistory,commit_df_fun) ->df_allCommits
df_allCommits
df_allCommits$author == df_allCommits$commiter -> df_allCommits$samePerson
df_allCommits
df_allCommits$samePerson
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
df_validCommits$commitDate <- ymd_hms("df_validCommits$commitDate")
df_validCommits$commitDate
# df_validCommits$hh
# df_validCommits$date
# df_validCommits$weekday
# df_validCommits$validCommit
# df_validCommitsSubsample
# validCounts
# valid_commit_count
df_validCommits$commitDate <- ymd_hms(df_validCommits$commitDate)
df_validCommits$commitDate
df_validCommits$commitDate <- with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate
df_validCommits$commitDate <- with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$author
df_validCommits$commitDate <- with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate
df_validCommits$commitDate <- with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
View(df_validCommits)
df_validCommits$commitDate
df_validCommits$commitDate <-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate
df_validCommits$commitDate<-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate
df_validCommits$commitDate<-
with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
df_validCommits$commitDate
df_validCommits$commitDate<-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
x <- as.character(round(runif(10)*100),10)
x
as.integer(x) -> x
logicBig <- x >= 50
logicBig
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) ### 取出每個元素第二位
map(a,~.[c(1,3)]) ### 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) ### 取出每個元素第一及第三位
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
data3
logiPASS <- (data3$成績 >= 60)
logiPASS
a <- data3$成績[logiPASS]
b <- data3$學分數[logiPASS]
passData <- list(a,b)
passData
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
twDates2 <- str_replace_all(twDates,"(民國)|(月)"," ")
twDates2
twDates
str_sub(twDates,3,5) -> yearCharacter
yearCharacter <- as.integer(yearCharacter)
yearCharacter + 1911 -> westYears
westYears
twDates2
str_split(twDates2,"年") -> datalist #用年切開 年 月值
datalist
map(datalist,~.[[2]]) -> monthlist#選出每個元素的第二個值
monthlist
unlist(monthlist) -> monthvector # 將list疊成字串向量
monthvector
str_c(as.character(westYears),monthvector,"01",sep="-") -> westDates# 貼成YYYY-MM-DD 字串格式
westDates
ymd(westDates) -> westDates# 轉成dates
class(westDates)
westDates
load("sampledTranscriptData.Rda")
str_sub(df_validCommits$commitDate,9,10)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,11,12)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,5,6)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,11,12)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
class(df_validCommits$hh)
as.integer(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
class(df_validCommits$hh)
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
class(df_validCommits$hh)
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
class(df_validCommits$hh)
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
commitHistory[[10]]-> oneCommitRecord
oneCommitRecord
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F)
df_commit
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
library(purrr)
map_dfr(commitHistory,commit_df_fun) ->df_allCommits
df_allCommits
df_allCommits$author == df_allCommits$commiter -> df_allCommits$samePerson
df_allCommits
df_allCommits$samePerson
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
df_validCommits$commitDate
df_validCommits$commitDate<-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
# df_validCommits$date
# df_validCommits$weekday
# df_validCommits$validCommit
# df_validCommitsSubsample
# validCounts
# valid_commit_count
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
hour(df_validCommits$commitDate)
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(df_validCommits$hh)
class(df_validCommits$hh)
# df_validCommits$hh
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
str_sub(df_validCommits$commitDate,12,13) -> df_validCommits$hh
as.integer(unlist(df_validCommits$hh))
class(df_validCommits$hh)
# df_validCommits$hh
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
df_validCommits$hh
date(df_validCommits$commitDate)
# df_validCommits$date
date(df_validCommits$commitDate) -> df_validCommits$date
df_validCommits$date
date(df_validCommits$commitDate) -> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
df_validCommits$weekday
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
as.integer(df_validCommits$weekday)
df_validCommits$weekday
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
as.integer(df_validCommits$weekday)
class(df_validCommits$weekday)
df_validCommits$weekday
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
commitHistory[[10]]-> oneCommitRecord
oneCommitRecord
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F)
df_commit
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
library(purrr)
map_dfr(commitHistory,commit_df_fun) ->df_allCommits
df_allCommits
df_allCommits$author == df_allCommits$commiter -> df_allCommits$samePerson
df_allCommits
df_allCommits$samePerson
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
df_validCommits$commitDate
df_validCommits$commitDate<-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
df_validCommits$hh
date(df_validCommits$commitDate) -> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
as.integer(df_validCommits$weekday)
class(df_validCommits$weekday)
df_validCommits$weekday
# df_validCommits$validCommit
# df_validCommitsSubsample
# validCounts
# valid_commit_count
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
as.integer(df_validCommits$weekday) -> df_validCommits$weekday
class(df_validCommits$weekday)
df_validCommits$weekday
df_validCommits$validCommit <- (df_validCommits$weekday >= 2 & df_validCommits$weekday <= 4 & df_validCommits$hh >= 12 & df_validCommits$hh <= 23)
# df_validCommits$validCommit
df_validCommits$validCommit <- (df_validCommits$weekday >= 2 & df_validCommits$weekday <= 4 & df_validCommits$hh >= 12 & df_validCommits$hh <= 23)
df_validCommits$validCommit
df_validCommits[df_validCommits$validCommit]
df_validCommits[df_validCommits$validCommit ,]
# df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit ]
df_validCommits[df_validCommits$validCommit ,]
# df_validCommitsSubsample
df_validCommits[df_validCommits$validCommit ,] -> df_validCommitsSubsample
df_validCommitsSubsample
length(df_validCommitsSubsample)
# validCounts
length(df_validCommitsSubsample)
nrow(df_validCommitsSubsample)
# validCounts
library(lubridate); library(stringr); library(purrr); library(readr);
test <- 2+3 # 答案存在指定test物件
test # 最後一行打指定物件名稱
library(httr)
commitHistory <- content(GET("https://api.github.com/repos/r-hub/cranlogs/commits"))
commitHistory[[10]]-> oneCommitRecord
oneCommitRecord
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F)
df_commit
commit_df_fun <- function(oneCommitRecord){
df_commit <- data.frame(
author=oneCommitRecord$commit$author$name,
commiter=oneCommitRecord$commit$committer$name,
commitDate=oneCommitRecord$commit$committer$date,
sha=oneCommitRecord$sha,
stringsAsFactors=F
)
return(df_commit)
}
commit_df_fun
library(purrr)
map_dfr(commitHistory,commit_df_fun) ->df_allCommits
df_allCommits
df_allCommits$author == df_allCommits$commiter -> df_allCommits$samePerson
df_allCommits
df_allCommits$samePerson
df_allCommits[df_allCommits$samePerson == T,]-> df_validCommits
df_validCommits
df_validCommits$commitDate
df_validCommits$commitDate<-with_tz(ymd_hms(df_validCommits$commitDate),tzone="Asia/Taipei")
df_validCommits$commitDate
hour(df_validCommits$commitDate) -> df_validCommits$hh
class(df_validCommits$hh)
df_validCommits$hh
date(df_validCommits$commitDate) -> df_validCommits$date
class(df_validCommits$date)
df_validCommits$date
wday(df_validCommits$commitDate) -> df_validCommits$weekday
class(df_validCommits$weekday)
as.integer(df_validCommits$weekday) -> df_validCommits$weekday
class(df_validCommits$weekday)
df_validCommits$weekday
df_validCommits$validCommit <- (df_validCommits$weekday >= 2 & df_validCommits$weekday <= 4 & df_validCommits$hh >= 12 & df_validCommits$hh <= 23)
df_validCommits$validCommit
df_validCommits[df_validCommits$validCommit ,] -> df_validCommitsSubsample
df_validCommitsSubsample
nrow(df_validCommitsSubsample)
# validCounts
# valid_commit_count
nrow(df_validCommitsSubsample) -> validCounts
validCounts
